package hamiltonCycle;

import travellingSalemansProblem.CertificatTSP;

public class HC {
	
	public int nbVilles;
	public boolean[][] distances;
	
	public HC(int nbVilles, boolean[][] distances){
		this.nbVilles=nbVilles;
		this.distances=distances;
	}
	
	public TSP reductionPolyTSP() {
		
		int [][] distancesRed = new int[nbVilles][nbVilles];
		String [] nomVille = new String[nbVilles];
		
		/** Initialisation de la matrice HC - 1 = true et 3 = false **/
		for(int i=0;i < distances.length;i++)
			for(int j=0;j < distances[i].length; j++)
				if(distances[i][j]==true)distancesRed[i][j]=1;
				else distancesRed[i][j]=3;
		
		/** Initialisation des nom de villes **/
		for(int i=1;i <= distances.length;i++)
			nomVille = String.valueOf(i);
		
		TSP reducPoly = new TSP();
		return reducPoly;
	}
	
}
